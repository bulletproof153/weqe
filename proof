local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bulletproof153/weqe/refs/heads/main/ksubi2"))()

local Camera = workspace.CurrentCamera
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer


local CombatVar = {

	HitboxSize = 1.5,
	HitboxTransparency = 50,
	HitboxPart = "Head",
	HitboxEnabled = false,

	AimbotEnabled = false,
	AimbotTarget = nil,
	AimbotToggle = false,
	AimbotActive = false,
	AimbotCode = Enum.UserInputType.MouseButton2,
	AimbotPart = "Head",
	AimbotFunction = nil,
	AimbotDistance = 500,
	AimbotInput1 = nil,
	AimbotInput2 = nil,



}

local OtherVar = {

	FakeToolName = "Unnamed Tool"

}

local Fov = 70

--local Highlight = Instance.new("Highlight",Workspace)
local PartTables = {}
--if Highlight then
-- Highligt.Adornee = nil
--end
-- // Window \\ --

local Window = Library:CreateWindow({
	Name = "Bulletproof UI",
	Themeable = {
		Info = "wdaidjasidj",
		Background = 18359232994,
		Credit = true
	},
	Theme = [[{"__Designer.Colors.topGradient":"232323","__Designer.Settings.ShowHideKey":"Enum.KeyCode.RightShift","__Designer.Colors.section":"FFFFFF","__Designer.Colors.hoveredOptionBottom":"2D2D2D","__Designer.Background.ImageAssetID":"rbxassetid://18359232994","__Designer.Colors.innerBorder":"282828","__Designer.Colors.unselectedOption":"282828","__Designer.Files.WorkspaceFile":"Pepsi's World","__Designer.Colors.unhoveredOptionTop":"323232","__Designer.Colors.outerBorder":"000000","__Designer.Background.ImageColor":"000000","__Designer.Colors.tabText":"E1E1E1","__Designer.Colors.elementBorder":"141414","__Designer.Colors.sectionBackground":"232222","__Designer.Colors.selectedOption":"373737","__Designer.Background.ImageTransparency":88,"__Designer.Colors.bottomGradient":"1D1D1D","__Designer.Colors.background":"282828","__Designer.Colors.main":"FFFFFF","__Designer.Colors.otherElementText":"B5B5B5","__Designer.Colors.hoveredOptionTop":"414141","__Designer.Colors.elementText":"DEDEDE","__Designer.Colors.unhoveredOptionBottom":"232323","__Designer.Background.UseBackgroundImage":true}]]
})

Library.MainScreenGui.main.Size = UDim2.fromOffset(500, 230)

-- // Pages \\ --
local CombatPage = Window:CreateTab({Name = "Combat"})
local VisualPage = Window:CreateTab({Name = "Visual"})
local OtherPage = Window:CreateTab({Name = "Other"})

-- // Sections \\ --
local CHitbox = CombatPage:CreateSection(
	{Name = "Hitbox Expander",Side = "Left"}
)

local CAimbot = CombatPage:CreateSection(
	{Name = "Camera Aimbot",Side = "Right"}
)

local VOther = VisualPage:CreateSection(
	{Name = "Other",Side = "Left"}
)

local OFakeTool = OtherPage:CreateSection(
	{Name = "Fake Tool",Side = "Left"}
)


-- // COMBAT \\ --

CHitbox:AddToggle({
	Name = "Enabled",
	Value = false,
	Flag = "CHitboxToggle",
	Keybind = Enum.KeyCode.K,
	Callback = function(v)
		CombatVar.HitboxEnabled = v
	end
}
)


CHitbox:AddDropdown({
	Name = "Part Name",
	List = {'Head', 'Torso','UpperTorso'},
	Value = "Head", 
	Nothing = "Head",
	Flag = "CHitboxDropdown",
	Callback = function(v)
		CombatVar.HitboxPart = v
	end
})


CHitbox:AddSlider({
	Name = "Size",
	Flag = "CHitboxSlider1",
	Value = 3,
	Decimals = 1,
	Min = 1,
	Max = 30,
	Callback = function(v)
		CombatVar.HitboxSize = v
	end
})

CHitbox:AddSlider({
	Name = "Transaprency", 
	Flag = "CHitboxSlider2",
	Value = 0.5,
	Decimals = 1,
	Min = 0, 
	Max = 1, 
	Callback = function(v)
		CombatVar.HitboxTransparency = v
	end
})

Library.keyHandler.notAllowedMouseInputs[Enum.UserInputType.MouseButton1] = false
Library.keyHandler.notAllowedMouseInputs[Enum.UserInputType.MouseButton2] = false
Library.keyHandler.notAllowedMouseInputs[Enum.UserInputType.MouseButton3] = false


CAimbot:AddToggle({
	Name = "Enabled",
	Value = false,
	Flag = "CAimbotToggle1",
	Keybind = Enum.KeyCode.J,
	Callback = function(v)
		Aimbot(v)
	end
})

CAimbot:AddToggle({
	Name = "Toggle Mode",
	Value = false,
	Flag = "CAimbotToggle2",
	Callback = function(v)
		CombatVar.AimbotToggle = v
	end
})

CAimbot:AddTextbox({
	Name = "Keybind",
	Flag = "CAimbotToggle2",
	Placeholder = "MouseButton..1-3 or Keycode",
	Value = "MouseButton2",
	Callback = function(v) 
		CombatVar.AimbotCode = Enum.UserInputType:FromName(v) or Enum.KeyCode:FromName(v)
	end
})

CAimbot:AddDropdown({
	Name = "Part Name",
	List = {'Head', 'Torso','UpperTorso'},
	Value = "Head", 
	Nothing = "Head",
	Flag = "CAimbotDropdown",
	Callback = function(v)
		CombatVar.AimbotPart = v
	end
})



-- // VISUAL \\ --

VOther:AddSlider({
	Name = "Field Of View", 
	Min = 50, 
	Max = 120,
	Value = 70,
	Flag = "VFovSlider1",
	Callback = function(v)
		Fov = v
		Camera.FieldOfView = Fov
	end
})


-- // OTHER \\ --

OFakeTool:AddTextbox({
	Name = "Fake tool name",
	Flag = "OFakeToolTextbox",
	Placeholder = "...",
	Value = "Unnamed Tool",
	Callback = function(v) 
		OtherVar.FakeToolName = v
	end
})

OFakeTool:AddButton({
	Name = "Create Fake Tool", 
	Callback = function()
		print(OtherVar.FakeToolName)
		if OtherVar.FakeToolName == "Unnamed Tool" then return end
		local Tool = Instance.new("Tool",game.Players.LocalPlayer.Backpack)

		Tool.RequiresHandle = false

		Tool.Name = OtherVar.FakeToolName

		local character = Player.Character or Player.CharacterAdded:Wait()
		local humanoid = character:WaitForChild("Humanoid")

		humanoid.Died:Connect(function()
			if Tool.Parent == Player.Backpack then
				Tool:Destroy()
			end
		end)
	end
})

OFakeTool:AddLabel({
	Name = "fake tool for ???",
})




-- // FUNCTIONS \\ --

function GetAimbotTarget()

	local Distance = CombatVar.AimbotDistance or 500

	local Target = nil

	for _,Victim in pairs(Players:GetPlayers()) do
		if Victim ~= Player and Victim.Character and Victim.Character:FindFirstChild(CombatVar.AimbotPart) and Victim.Character:FindFirstChild("Humanoid") and Victim.Character.Humanoid.Health > 0 then
			local VictimPart = Victim.Character:FindFirstChild(CombatVar.AimbotPart)
			local Point = Camera:WorldToViewportPoint(VictimPart.Position)
			local Vector = Vector2.new(Point.X,Point.Y)
			local DistanceFromVictim = (UserInputService:GetMouseLocation()-Vector).Magnitude
			if DistanceFromVictim <= Distance then
				Target = VictimPart
				Distance = DistanceFromVictim
			end
		end
	end

	CombatVar.AimbotTarget = Target

end

function Aimbot(value)

	if value then

		CombatVar.AimbotEnabled = true

		CombatVar.AimbotInput1 = UserInputService.InputBegan:Connect(function(Input)
			print(CombatVar.AimbotCode)
			if Input.UserInputType == CombatVar.AimbotCode or Input.KeyCode == CombatVar.AimbotCode then

				CombatVar.AimbotActive = if CombatVar.AimbotToggle then not CombatVar.AimbotActive else true


				if CombatVar.AimbotActive then
					GetAimbotTarget()
				else
					CombatVar.AimbotTarget = nil
				end

			end


		end)

		CombatVar.AimbotInput2 = UserInputService.InputEnded:Connect(function(Input)

			if CombatVar.AimbotToggle then return end

			if Input.UserInputType == CombatVar.AimbotCode or Input.KeyCode == CombatVar.AimbotCode then

				CombatVar.AimbotActive = false

				CombatVar.AimbotTarget = nil


			end

		end)


	else

		if CombatVar.AimbotInput1 then
			CombatVar.AimbotInput1:Disconnect()
		end
		if CombatVar.AimbotInput2 then
			CombatVar.AimbotInput2:Disconnect()
		end
	end

end

RunService.RenderStepped:Connect(function() 

	if CombatVar.AimbotEnabled and CombatVar.AimbotTarget and CombatVar.AimbotActive then
		Camera.CFrame = CFrame.lookAt(Camera.CFrame.Position,CombatVar.AimbotTarget.Position)
	end

	for i,v in pairs (Players:GetPlayers()) do
		if v ~= Player
			and v.Character
			and v.Character:FindFirstChild("Humanoid") 
			and v.Character.Humanoid.Health >= 0 then
			if v.Character:FindFirstChild(CombatVar.HitboxPart) then
				local part = v.Character:FindFirstChild(CombatVar.HitboxPart)
				if CombatVar.HitboxEnabled then
					if not part:GetAttribute("BPOrigSize") then
						part:SetAttribute("BPOrigSize",part.Size)
						part:SetAttribute("BPOrigTransparency",part.Transparency)
					end
					--if not PartTables[part] then
					--	PartTables[part] = part.Size
					--end
					part.Size = Vector3.one * CombatVar.HitboxSize
					part.Transparency = CombatVar.HitboxTransparency
					part.CanCollide = false
					part.Massless= true
				else
					--if PartTables[part] then
					--	part.Size = PartTables[part]
					--end
					if part:GetAttribute("BPOrigSize") then
						part.Size = part:GetAttribute("BPOrigSize")
						part.Transparency = part:GetAttribute("BPOrigTransparency")
					end
					part.Transparency = 0
					part.CanCollide = true
				end

			end
		end 
	end
end)
